{"ast":null,"code":"/**\n * Serialize data into a cookie header.\n */\nfunction serialize(name, val, options) {\n  const opt = options || {};\n  const enc = encodeURIComponent;\n  /* eslint-disable-next-line no-control-regex */\n\n  const fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  const value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  let str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    const maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid');\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString();\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.sameSite) {\n    const sameSite = typeof opt.sameSite === 'string' ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n\n      case 'none':\n        str += '; SameSite=None';\n        break;\n\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n/**\n * Based on the environment and the request we know if a secure cookie can be set.\n */\n\n\nfunction isSecureEnvironment(req) {\n  if (!req || !req.headers || !req.headers.host) {\n    throw new Error('The \"host\" request header is not available');\n  }\n\n  const host = req.headers.host.indexOf(':') > -1 && req.headers.host.split(':')[0] || req.headers.host;\n\n  if (['localhost', '127.0.0.1'].indexOf(host) > -1 || host.endsWith('.local')) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Serialize a cookie to a string.\n */\n\n\nfunction serializeCookie(cookie, secure) {\n  var _a, _b, _c;\n\n  return serialize(cookie.name, cookie.value, {\n    maxAge: cookie.maxAge,\n    expires: new Date(Date.now() + cookie.maxAge * 1000),\n    httpOnly: true,\n    secure,\n    path: (_a = cookie.path) !== null && _a !== void 0 ? _a : '/',\n    domain: (_b = cookie.domain) !== null && _b !== void 0 ? _b : '',\n    sameSite: (_c = cookie.sameSite) !== null && _c !== void 0 ? _c : 'lax'\n  });\n}\n/**\n * Get Cookie Header strings.\n */\n\n\nexport function getCookieString(req, res, cookies) {\n  const strCookies = cookies.map(c => serializeCookie(c, isSecureEnvironment(req)));\n  const previousCookies = res.getHeader('Set-Cookie');\n\n  if (previousCookies) {\n    if (previousCookies instanceof Array) {\n      Array.prototype.push.apply(strCookies, previousCookies);\n    } else if (typeof previousCookies === 'string') {\n      strCookies.push(previousCookies);\n    }\n  }\n\n  return strCookies;\n}\n/**\n * Set one or more cookies.\n */\n\nexport function setCookies(req, res, cookies) {\n  res.setHeader('Set-Cookie', getCookieString(req, res, cookies));\n}\n/**\n * Set one or more cookies.\n */\n\nexport function setCookie(req, res, cookie) {\n  setCookies(req, res, [cookie]);\n}\nexport function deleteCookie(req, res, name) {\n  setCookie(req, res, {\n    name,\n    value: '',\n    maxAge: -1\n  });\n}","map":{"version":3,"names":["serialize","name","val","options","opt","enc","encodeURIComponent","fieldContentRegExp","TypeError","test","value","str","maxAge","isNaN","isFinite","Math","floor","domain","path","expires","toUTCString","httpOnly","secure","sameSite","toLowerCase","isSecureEnvironment","req","headers","host","Error","indexOf","split","endsWith","serializeCookie","cookie","_a","_b","_c","Date","now","getCookieString","res","cookies","strCookies","map","c","previousCookies","getHeader","Array","prototype","push","apply","setCookies","setHeader","setCookie","deleteCookie"],"sources":["C:/Users/Sergipetec/Documents/supabase-angular/node_modules/@supabase/gotrue-js/dist/module/lib/cookies.js"],"sourcesContent":["/**\n * Serialize data into a cookie header.\n */\nfunction serialize(name, val, options) {\n    const opt = options || {};\n    const enc = encodeURIComponent;\n    /* eslint-disable-next-line no-control-regex */\n    const fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n    if (typeof enc !== 'function') {\n        throw new TypeError('option encode is invalid');\n    }\n    if (!fieldContentRegExp.test(name)) {\n        throw new TypeError('argument name is invalid');\n    }\n    const value = enc(val);\n    if (value && !fieldContentRegExp.test(value)) {\n        throw new TypeError('argument val is invalid');\n    }\n    let str = name + '=' + value;\n    if (null != opt.maxAge) {\n        const maxAge = opt.maxAge - 0;\n        if (isNaN(maxAge) || !isFinite(maxAge)) {\n            throw new TypeError('option maxAge is invalid');\n        }\n        str += '; Max-Age=' + Math.floor(maxAge);\n    }\n    if (opt.domain) {\n        if (!fieldContentRegExp.test(opt.domain)) {\n            throw new TypeError('option domain is invalid');\n        }\n        str += '; Domain=' + opt.domain;\n    }\n    if (opt.path) {\n        if (!fieldContentRegExp.test(opt.path)) {\n            throw new TypeError('option path is invalid');\n        }\n        str += '; Path=' + opt.path;\n    }\n    if (opt.expires) {\n        if (typeof opt.expires.toUTCString !== 'function') {\n            throw new TypeError('option expires is invalid');\n        }\n        str += '; Expires=' + opt.expires.toUTCString();\n    }\n    if (opt.httpOnly) {\n        str += '; HttpOnly';\n    }\n    if (opt.secure) {\n        str += '; Secure';\n    }\n    if (opt.sameSite) {\n        const sameSite = typeof opt.sameSite === 'string' ? opt.sameSite.toLowerCase() : opt.sameSite;\n        switch (sameSite) {\n            case 'lax':\n                str += '; SameSite=Lax';\n                break;\n            case 'strict':\n                str += '; SameSite=Strict';\n                break;\n            case 'none':\n                str += '; SameSite=None';\n                break;\n            default:\n                throw new TypeError('option sameSite is invalid');\n        }\n    }\n    return str;\n}\n/**\n * Based on the environment and the request we know if a secure cookie can be set.\n */\nfunction isSecureEnvironment(req) {\n    if (!req || !req.headers || !req.headers.host) {\n        throw new Error('The \"host\" request header is not available');\n    }\n    const host = (req.headers.host.indexOf(':') > -1 && req.headers.host.split(':')[0]) || req.headers.host;\n    if (['localhost', '127.0.0.1'].indexOf(host) > -1 || host.endsWith('.local')) {\n        return false;\n    }\n    return true;\n}\n/**\n * Serialize a cookie to a string.\n */\nfunction serializeCookie(cookie, secure) {\n    var _a, _b, _c;\n    return serialize(cookie.name, cookie.value, {\n        maxAge: cookie.maxAge,\n        expires: new Date(Date.now() + cookie.maxAge * 1000),\n        httpOnly: true,\n        secure,\n        path: (_a = cookie.path) !== null && _a !== void 0 ? _a : '/',\n        domain: (_b = cookie.domain) !== null && _b !== void 0 ? _b : '',\n        sameSite: (_c = cookie.sameSite) !== null && _c !== void 0 ? _c : 'lax',\n    });\n}\n/**\n * Get Cookie Header strings.\n */\nexport function getCookieString(req, res, cookies) {\n    const strCookies = cookies.map((c) => serializeCookie(c, isSecureEnvironment(req)));\n    const previousCookies = res.getHeader('Set-Cookie');\n    if (previousCookies) {\n        if (previousCookies instanceof Array) {\n            Array.prototype.push.apply(strCookies, previousCookies);\n        }\n        else if (typeof previousCookies === 'string') {\n            strCookies.push(previousCookies);\n        }\n    }\n    return strCookies;\n}\n/**\n * Set one or more cookies.\n */\nexport function setCookies(req, res, cookies) {\n    res.setHeader('Set-Cookie', getCookieString(req, res, cookies));\n}\n/**\n * Set one or more cookies.\n */\nexport function setCookie(req, res, cookie) {\n    setCookies(req, res, [cookie]);\n}\nexport function deleteCookie(req, res, name) {\n    setCookie(req, res, {\n        name,\n        value: '',\n        maxAge: -1,\n    });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}